app: inflator
service: inflator

package:
  individually: true
  exclude:
    - "**"

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${env:ENVIRONMENT}
  region: ${env:AWS_DEFAULT_REGION}
  httpApi:
    cors:
      allowedOrigins:
        - https://${env:TF_VAR_DOMAIN_NAME}

  environment:
    S3_BUCKET_NAME: "inflator-data-bucket-${env:ENVIRONMENT}-${env:AWS_DEFAULT_REGION}"

functions:
  calculatePayStats:
    handler: esdist/calculate/calculate.calculateLambda
    timeout: 20
    events:
      - httpApi:
          method: GET
          path: /calculate
    role: getONSDataRole
    package:
      include:
        - esdist/calculate/calculate.js
        - esdist/calculate/calculate.js.map
  getDateOptions:
    handler: esdist/get-date-options/get-date-options.getDateOptions
    timeout: 20
    events:
      - httpApi:
          method: GET
          path: /get-date-options
    role: getONSDataRole
    package:
      include:
        - esdist/get-date-options/get-date-options.js
        - esdist/get-date-options/get-date-options.js.map
  getDateOptionsJson:
    handler: esdist/get-date-options-json/get-date-options-json.getDateOptionsJson
    timeout: 20
    events:
      - httpApi:
          method: GET
          path: /get-date-options-json
    role: getONSDataRole
    package:
      include:
        - esdist/get-date-options-json/get-date-options-json.js
        - esdist/get-date-options-json/get-date-options-json.js.map
  importONSData:
    handler: esdist/import-ons-data/handler.importONSData
    timeout: 90
    events:
      - schedule: rate(2 hours)
      - httpApi:
          method: GET
          path: /import-ons-data
    role: adaptONSDataRole1
    package:
      include:
        - esdist/import-ons-data/handler.js
        - esdist/import-ons-data/handler.js.map

custom:
  scripts:
    hooks:
      "deploy:finalize": ./invoke-importONS.sh
  lambdaInsights:
    defaultLambdaInsights: true #enables Lambda Insights for all functions
    attachPolicy: true
    lambdaInsightsVersion: 14
  s3:
    host: localhost
    directory: /tmp

resources:
  Resources:
    InflatorDataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: "inflator-data-bucket-${env:ENVIRONMENT}-${env:AWS_DEFAULT_REGION}"

    adaptONSDataRole1:
      Type: AWS::IAM::Role
      Properties:
        Path: /my/cust/path/
        RoleName: adaptONSDataRole1
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
        Policies:
          - PolicyName: importONSDataPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/*:*:*"
                - Effect: Allow
                  Action:
                    - s3:*
                  Resource: "*"

    getONSDataRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /my/cust/path/
        RoleName: adaptONSDataRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
        Policies:
          - PolicyName: getONSDataPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/*:*:*"
                - Effect: Allow
                  Action:
                    - s3:*
                  Resource: "*"
plugins:
  - serverless-s3-local
  - serverless-offline
  - serverless-plugin-scripts
  - serverless-plugin-lambda-insights
