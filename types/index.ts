// Generated by ts-to-zod
import { z } from "zod";

const month = z.union([
  z.literal("January"),
  z.literal("February"),
  z.literal("March"),
  z.literal("April"),
  z.literal("May"),
  z.literal("June"),
  z.literal("July"),
  z.literal("August"),
  z.literal("September"),
  z.literal("October"),
  z.literal("November"),
  z.literal("December"),
]);

export type Month = z.infer<typeof month>;

const titleSchema = z
  .string()
  .regex(/^[0-9]{4} (JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)$/);

export type TitleSchema = z.infer<typeof titleSchema>;

export const onsRow = z.object({
  Title: titleSchema,
  "CPI ANNUAL RATE 00: ALL ITEMS 2015=100": z.string().min(1),
});

export type ONSRow = z.infer<typeof onsRow>;

const adaptedONSRow = z.object({
  timePeriod: z.string(),
  year: z.number(),
  month: month,
  isoDate: z.string(),
  cpi: z.number(),
});

export type AdaptedONSRow = z.infer<typeof adaptedONSRow>;

export const indexedRecordSchema = adaptedONSRow;

export type IndexedRecordSchema = z.infer<typeof indexedRecordSchema>;

export const indexedRecordsSchema = z.array(indexedRecordSchema);
export type IndexedRecordsSchema = z.infer<typeof indexedRecordsSchema>;

const yearSchema = z.number().int().gte(1988).lte(2023);

export const monthNumber = z.union([
  z.literal(1),
  z.literal(2),
  z.literal(3),
  z.literal(4),
  z.literal(5),
  z.literal(6),
  z.literal(7),
  z.literal(8),
  z.literal(9),
  z.literal(10),
  z.literal(11),
  z.literal(12),
]);

export type MonthNumber = z.infer<typeof monthNumber>;

export const dateOptionSchema = z.object({
  timePeriod: z.string(),
  isoDate: z.string(),
  year: yearSchema,
  month: month,
  monthNumber: monthNumber,
  cpi: z.number(),
});

export type DateOption = z.infer<typeof dateOptionSchema>;

export const dateOptionsSchema = z.array(dateOptionSchema);

export type DateOptions = z.infer<typeof dateOptionsSchema>;

export const formFieldsSchema = z.object({
  startingYear: z.number(),
  startingMonth: z.string(),
  startingSalary: z.number(),
  currentSalary: z.number(),
});

export type FormFields = z.infer<typeof formFieldsSchema>;

export const calculateResDataSchema = z.object({
  inflation: z.number(),
  inflatedSalary: z.number(),
  startingSalary: z.number(),
  currentSalary: z.number(),
  startingTimePeriod: dateOptionSchema,
  realTermsAbsoluteChange: z.number(),
  realTermsPercentagePayChange: z.number(),
  realTermsPercentageDifferent: z.number(),
});

export type CalculateResData = z.infer<typeof calculateResDataSchema>;

export const calculateParams = z.object({
  startingSalary: z.number(),
  currentSalary: z.number(),
  startingYear: z.number(),
  startingMonth: month,
  finishingYear: z.number().optional(),
  finishingMonth: month.optional(),
});

export type CalculateParams = z.infer<typeof calculateParams>;
